spring.application.name="Freelancer portal back-end"
server.port=8080
logging.level.org.springframework.web=debug

spring.main.log-startup-info=false
spring.data.rest.base-path=/api

#server.servlet.context-path=/api

spring.datasource.url=jdbc:h2:mem:testdb

spring.h2.console.enabled=true

#debug=true

# Hibernate generates schema for your entity based on it?s mapping.
# Values can be set: ddl-auto, create or create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=h2
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=true
#spring.jpa.open-in-view=false
spring.jpa.generate-ddl=true

#spring.jpa.properties.hibernate.cache.use_query_cache=false
#spring.jpa.properties.hibernate.generate_statistics=true

# For other Relational databases like MySql, PostgreSql etc.. you
# need to set spring.datasource.initialization-mode property in Spring Boot
# configuration file. The default value is embedded. Have to set always to
# load sql script files, automatically loads schema.sql and data.sql from
# classpath. You can switch this value to never to not initialize.
spring.sql.init.mode=always

# workaround of springfox bug
#spring.mvc.pathmatch.matching-strategy=ant_path_matcher
#springfox.documentation.swagger.v2.use-model-v3=true



#---
#
#spring:
#  config:
#    activate:
#      on-profile: prod-mysql
#  datasource:
#    url: jdbc:mysql://localhost:3306/invoice_system_dev?useSSL=false&serverTimezone=UTC
#    username: root
#    password: vertrigo
#  jpa:
#    hibernate:
#      # Hibernate generates schema for your entity based on it?s mapping.
#      # Values can be set: ddl-auto, create or create-drop
#      ddl-auto: none
#      naming:
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#    database-platform: org.hibernate.dialect.MySQLInnoDBDialect
#    database: mysql
#server:
#  port: 80
#
#---
#
#spring: